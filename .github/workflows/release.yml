name: CI/CD

on:
  push:
    branches: [ main ]
    tags: 
      - 'v*'
  pull_request:
    branches: [ main ]

defaults:
  run:
    working-directory: src/ArmTypeGenerator

jobs:
  build:
    if: github.ref == 'refs/heads/main'
    
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
      with:
        submodules: recursive
    - name: Setup .NET
      uses: actions/setup-dotnet@v2
      with:
        dotnet-version: 6.0.x
    - name: Restore dependencies
      run: dotnet restore
    - name: Build
      run: dotnet build --no-restore
    - name: Publish win version
      run: dotnet publish --configuration Release --os win --version-suffix $GITHUB_RUN_NUMBER --output ${{ github.workspace }}/win
    - name: Publish linux version
      run: dotnet publish --configuration Release --os linux --version-suffix $GITHUB_RUN_NUMBER --output ${{ github.workspace }}/linux    
    - name: Zip win version
      uses: papeloto/action-zip@v1
      with:
        files: win/
        dest: ArmTypeGenerator_win-x64.zip
    - name: Zip win version
      uses: papeloto/action-zip@v1
      with:
        files: linux/
        dest: ArmTypeGenerator_linux-x64.zip        
    - name: upload artifacts for debugging
      uses: actions/upload-artifact@v1
      with:
        name: my-artifact
        path: |
          ${{ github.workspace }}/ArmTypeGenerator_win-x64.zip
          ${{ github.workspace }}/ArmTypeGenerator_linux-x64.zip

  release:
    if: startsWith(github.ref, 'refs/tags')
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v3
      with:
        submodules: recursive
    - name: Setup .NET
      uses: actions/setup-dotnet@v2
      with:
        dotnet-version: 6.0.x
    - name: Restore dependencies
      run: dotnet restore
    - name: Build
      run: dotnet build --no-restore
    - name: Publish win version
      run: dotnet publish --configuration Release --os win --version-suffix $GITHUB_RUN_NUMBER --output ${{ github.workspace }}/win
    - name: Publish linux version
      run: dotnet publish --configuration Release --os linux --version-suffix $GITHUB_RUN_NUMBER --output ${{ github.workspace }}/linux      
    - name: Zip win version
      uses: papeloto/action-zip@v1
      with:
        files: win/
        dest: ArmTypeGenerator_win-x64.zip
    - name: Zip win version
      uses: papeloto/action-zip@v1
      with:
        files: linux/
        dest: ArmTypeGenerator_linux-x64.zip    
    - name: Upload Release
      uses: ncipollo/release-action@v1
      with:
        artifacts: "ArmTypeGenerator_win-x64.zip,ArmTypeGenerator_linux-x64.zip"
        token: ${{ secrets.GITHUB_TOKEN }}
